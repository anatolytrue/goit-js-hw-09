{"mappings":"YAqCA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,OA9CM,CACXQ,WAAYC,SAASC,cAAc,UACnCC,UAAWF,SAASC,cAAc,SAClCE,OAAQH,SAASC,cAAc,WAC/BG,UAAWJ,SAASC,cAAc,eAClCI,SAAUL,SAASC,cAAc,WAI9BI,SAASC,iBAAiB,UAmB/B,SAAuBC,GACrBA,EAAEC,iBACF,IAAML,EAASM,OAAOF,EAAEG,OAAOP,OAAOQ,OAChCpB,EAAQkB,OAAOF,EAAEG,OAAOnB,MAAMoB,OAC9BC,EAAOH,OAAOF,EAAEG,OAAOE,KAAKD,QAjBpC,SAAyBR,EAAQZ,EAAOqB,GACtC,IAAK,IAAIC,EAAI,EAAGA,GAAKV,EAAQU,GAAK,EAAE,CAElCxB,EAAcwB,EADFtB,EAAQqB,GAAQC,EAAI,IAE/BC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAU0B,EAAKD,EAALxB,MACjB0B,QAAQC,IAAI,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAANH,EAAM,UAEzDI,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAU0B,EAAKD,EAALxB,MACpB0B,QAAQC,IAAI,sBAAqCC,OAAf7B,EAAS,QAAY6B,OAANH,EAAM,WAW3DK,CAAgBlB,EAAQZ,EAAOqB,M","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  firstDelay: document.querySelector('.delay'),\n  stepDelay: document.querySelector('.step'),\n  amount: document.querySelector('.amount'),\n  submitBtn: document.querySelector('.submit-btn'),\n  formElem: document.querySelector('.form')\n}\n\n\nrefs.formElem.addEventListener('submit', submitPromise)\n\n\n\n\n\nfunction counterPromises(amount, delay, step) {\n  for (let i = 1; i <= amount; i += 1){\n    let total = delay + step * (i - 1);\n    createPromise(i, total)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n  }\n}\n\nfunction submitPromise(e) {\n  e.preventDefault();\n  const amount = Number(e.target.amount.value);\n  const delay = Number(e.target.delay.value);\n  const step = Number(e.target.step.value);\n\n  counterPromises(amount, delay, step);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n\n// const result = arr.reduce(function(sum, current) {\n//   return sum + current;\n// }, 0);\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","firstDelay","document","querySelector","stepDelay","amount","submitBtn","formElem","addEventListener","e","preventDefault","Number","target","value","step","i","then","param","_$delay","console","log","concat","catch","$ce04d3a99e08e73b$var$counterPromises"],"version":3,"file":"03-promises.7185c209.js.map"}